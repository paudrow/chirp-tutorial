import type {
  GetStaticPaths,
  GetStaticProps,
  NextPage,
} from "next";
import Head from "next/head";

import { api } from "@/utils/api";
import { PageLayout } from "@/components/layout";
import { PostView } from "@/components/postview";

import { generateSsgHelper } from "@/server/helpers/generateSsgHelper";

const SinglePostPage: NextPage<{ id: string }> = ({ id }) => {
  const { data } = api.posts.getById.useQuery({ id });

  if (!data) return <div>Post not found</div>

  return (
    <>
      <Head>
        <title>{`${data.post.content}`}</title>
        <meta name="description" content="Generated by create-t3-app" />
      </Head>
      <PageLayout>
        <PostView post={data.post} author={data.author}/>
      </PageLayout>
    </>
  );
};

export const getStaticProps: GetStaticProps = async (context) => {
  const ssg = generateSsgHelper();

  const id = context.params?.id;
  if (typeof id !== "string") throw new Error("Slug is not a string");

  await ssg.posts.getById.prefetch({ id });

  return {
    props: {
      trpcState: ssg.dehydrate(),
      id,
    },
  };
};

export const getStaticPaths: GetStaticPaths = () => {
  return {
    paths: [],
    fallback: "blocking",
  };
};

export default SinglePostPage;
